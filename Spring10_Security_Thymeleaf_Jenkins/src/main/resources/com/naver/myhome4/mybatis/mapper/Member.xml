<?xml version="1.0" encoding="UTF-8"?>
<!-- SQL 맵퍼 파일은 xml이기 때문에 제일 먼저 xml 선언이 옵니다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapper 인터페이스의 패키지명과 이름을 namespace로 설정합니다. -->
<mapper namespace="com.naver.myhome4.mybatis.mapper.MemberMapper">

<!-- 1. 태그에 id속성은 Mapper인터페이스에 사용된 메서드명과 동일 하게 작성됩니다.
	 2. resultType속성은 Mapper인터페이스에 사용된 메서드의 반환 타입을 작성해줍니다.
	  -->
	 <select id="isId" resultType="member">
	 	select * from member where id = #{id}
	 </select>
	 
	 <insert id="insert">
	 	insert into member 
	 	values (#{id},#{password},#{name},#{age},#{gender},#{email}, #{auth})
	 </insert>
	 
	 <update id="update">
	 	update member
		set	   name=#{name},
			   age=#{age},
			   gender=#{gender},
			   email=#{email}
		where id=#{id}
	 </update>
	 
	 <select id="getSearchListCount" resultType="int">
	 	select count(*)
	 	from member
	 	where id != 'admin'
	 	<if test="search_field != null">
	 		and
	 		<choose>
	 			<when test="search_field=='id'">id</when>
	 			<when test="search_field=='name'">name</when>
	 			<when test="search_field=='age'">age</when>
	 			<when test="search_field=='gender'">gender</when>
	 		</choose>
	 		like #{search_word}
	 	</if>
	 </select>
	 
	 
	 <select id="getSearchList" resultType="member">
			 	select * 
				from (select b.*, rownum rnum
					from(select * from member 
					where id != 'admin'
						 <if test="search_field != null">
			 				and
			 				<choose>
			 					<when test="search_field=='id'">id</when>
			 					<when test="search_field=='name'">name</when>
			 					<when test="search_field=='age'">age</when>
			 					<when test="search_field=='gender'">gender</when>
			 		</choose>
			 		like #{search_word}
			 	</if> 
					order by id
					) b
			 where rownum &lt; = #{end}    
				)
		where rnum &gt;= #{start} and rnum &lt;= #{end}
	 </select>
	 
	 <delete id="delete">
	 	delete from member where id = #{id}
	 </delete>
</mapper>